" ---Enable syntax highlighting---
syntax enable

"---Indentation---
filetype plugin indent on
set autoindent
set expandtab
set shiftwidth=4
set tabstop=4
set softtabstop=4
set nowrap

"---General settings---
set nu
set rnu
set hidden
set cursorline
set pumheight=10
set showtabline=4
set scrolloff=8
set noerrorbells

"---Search options---
set incsearch
set nohlsearch
set smartcase

"---Misc---
set nobackup
set nowritebackup
set noswapfile
set undodir=~/.config/nvim/undodir
set undofile
set termguicolors
set shortmess+=c
set clipboard=unnamedplus
set showmode

" Give more space for displaying messages.  set cmdheight=2

" Having longer updatetime (default is 4000 ms = 4 s) leads to noticeable
" delays and poor user experience.
set updatetime=50

" Don't pass messages to |ins-completion-menu|.
set shortmess+=c
" Set Map leader
let mapleader = " " 

set colorcolumn=80
highlight ColorColumn ctermbg=0 guibg=lightgrey


" ------ Plugin Management ------
call plug#begin('~/.config/nvim/plugged')

" ---- Intellisense ----
" Plug 'neomake/neomake', { 'for': ['cpp', 'c'] }
" Plug 'majutsushi/tagbar'
Plug 'neovim/nvim-lspconfig'
Plug 'nvim-lua/completion-nvim'
Plug 'octol/vim-cpp-enhanced-highlight'
Plug 'jiangmiao/auto-pairs'
"
" ---- Useful ----
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-commentary' 
Plug 'tpope/vim-dispatch'
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'
Plug 'mbbill/undotree'
Plug 'jremmen/vim-ripgrep'
Plug 'sheerun/vim-polyglot'
" Plug 'vim-airline/vim-airline'

" ---- Themes ----
Plug 'gruvbox-community/gruvbox'
Plug 'drewtempelmeyer/palenight.vim'
Plug 'arcticicestudio/nord-vim'

call plug#end()
" ----------- End --------------

" ----------Theme Settings--------
let g:gruvbox_contrast_dark = 'hard'
if exists('+termguicolors')
    let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
    let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
endif
let g:gruvbox_invert_selection='0'

" ----- theme(s) settings -----
let g:nord_italic = 1
let g:nord_italic_comments = 1
let g:nord_underline = 1
let g:nord_bold_vertical_split_line = 1

let g:gruvbox_italic=1

let g:palenight_terminal_italics=1

colorscheme nord
set background=dark
" ------------ END ---------------

"  ------------ LSP -------------- 

" Use <Tab> and <S-Tab> to navigate through popup menu
inoremap <expr> <Tab>   pumvisible() ? "\<C-n>" : "\<Tab>"
inoremap <expr> <S-Tab> pumvisible() ? "\<C-p>" : "\<S-Tab>"

" Set completeopt to have a better completion experience
set completeopt=menuone,noinsert,noselect
let g:completion_matching_strategy_list = ['exact', 'substring', 'fuzzy']

" Avoid showing message extra message when using completion
set shortmess+=c
lua require'nvim_lsp'.ccls.setup{on_attach=require'completion'.on_attach}

"  -------------------------------

"-------------- Language Settings ----------------
"--- Python ---
let python_highlight_all=1
let g:python3_host_prog='/usr/bin/python'

"--- C++/C ---
" syntax highlighting
let g:cpp_class_scope_highlight = 1
let g:cpp_member_variable_highlight = 1
let g:cpp_class_decl_highlight = 1
let g:cpp_posix_standard = 1
"-------------------------------------------------

" ---------- Other -----------
let g:netrw_browse_split=2
let g:netrw_banner=0
let g:netrw_winsize=25

if executable('rg')
    let g:rg_derive_root='true'
endif
" ---------------------------

if (has("nvim"))
  "For Neovim 0.1.3 and 0.1.4 < https://github.com/neovim/neovim/pull/2198 >
  let $NVIM_TUI_ENABLE_TRUE_COLOR=1
endif

function! SyntasticCheckHook(errors)
    if !empty(a:errors)
        let g:syntastic_loc_list_height = min([len(a:errors), 10])
    endif
endfunction

vnoremap < <gv
vnoremap > >gv
nmap <F8> :TagbarToggle<CR>
nnoremap <Leader>ps :Rg<Space>

"======= Wincmd =======
nnoremap <Leader>j :wincmd j<CR>
nnoremap <Leader>k :wincmd k<CR>
nnoremap <Leader>l :wincmd l<CR>
nnoremap <Leader>h :wincmd h<CR>
nnoremap <Leader>J :wincmd J<CR>
nnoremap <Leader>K :wincmd K<CR>
nnoremap <Leader>L :wincmd L<CR>
nnoremap <Leader>H :wincmd H<CR>
"======================

nnoremap <silent> <c-]> <cmd>lua vim.lsp.buf.definition()<CR>
nnoremap <silent> K     <cmd>lua vim.lsp.buf.hover()<CR>
nnoremap <silent> gD    <cmd>lua vim.lsp.buf.implementation()<CR>
nnoremap <silent> <c-k> <cmd>lua vim.lsp.buf.signature_help()<CR>
nnoremap <silent> 1gD   <cmd>lua vim.lsp.buf.type_definition()<CR>
nnoremap <silent> gr    <cmd>lua vim.lsp.buf.references()<CR>
nnoremap <silent> g0    <cmd>lua vim.lsp.buf.document_symbol()<CR>
nnoremap <silent> gW    <cmd>lua vim.lsp.buf.workspace_symbol()<CR>
nnoremap <silent> gd    <cmd>lua vim.lsp.buf.declaration()<CR>

nnoremap <Leader>u :UndotreeShow<CR>
nnoremap <C-p> :GFiles<CR>
nnoremap <Leader>pf :Files<CR>
nmap <Leader>s <Plug>BujoAddnormal
nmap <Leader>q <Plug>BujoChecknormal
nnoremap <leader>pw :Rg <C-R>=expand("<cword>")<CR><CR>
nnoremap <leader>phw :h <C-R>=expand("<cword>")<CR><CR>
nnoremap <Leader><CR> :source ~/.config/nvim/init.vim<CR>
nnoremap <leader>prw :CocSearch <C-R>=expand("<cword>")<CR><CR>
nnoremap <Leader>pv :Vexplore<CR>
tnoremap <ESC> <C-\><C-n>
